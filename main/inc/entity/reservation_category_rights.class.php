<?php

namespace Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 *
 * @license see /license.txt
 * @author autogenerated
 */
class ReservationCategoryRights extends \Entity
{
    /**
     * @return \Entity\Repository\ReservationCategoryRightsRepository
     */
     public static function repository(){
        return \Entity\Repository\ReservationCategoryRightsRepository::instance();
    }

    /**
     * @return \Entity\ReservationCategoryRights
     */
     public static function create(){
        return new self();
    }

    /**
     * @var integer $id
     */
    protected $id;

    /**
     * @var integer $category_id
     */
    protected $category_id;

    /**
     * @var integer $class_id
     */
    protected $class_id;

    /**
     * @var boolean $m_items
     */
    protected $m_items;


    /**
     * Get id
     *
     * @return integer 
     */
    public function get_id()
    {
        return $this->id;
    }

    /**
     * Set category_id
     *
     * @param integer $value
     * @return ReservationCategoryRights
     */
    public function set_category_id($value)
    {
        $this->category_id = $value;
        return $this;
    }

    /**
     * Get category_id
     *
     * @return integer 
     */
    public function get_category_id()
    {
        return $this->category_id;
    }

    /**
     * Set class_id
     *
     * @param integer $value
     * @return ReservationCategoryRights
     */
    public function set_class_id($value)
    {
        $this->class_id = $value;
        return $this;
    }

    /**
     * Get class_id
     *
     * @return integer 
     */
    public function get_class_id()
    {
        return $this->class_id;
    }

    /**
     * Set m_items
     *
     * @param boolean $value
     * @return ReservationCategoryRights
     */
    public function set_m_items($value)
    {
        $this->m_items = $value;
        return $this;
    }

    /**
     * Get m_items
     *
     * @return boolean 
     */
    public function get_m_items()
    {
        return $this->m_items;
    }
}
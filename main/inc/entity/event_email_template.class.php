<?php

namespace Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 *
 * @license see /license.txt
 * @author autogenerated
 */
class EventEmailTemplate extends \Entity
{
    /**
     * @return \Entity\Repository\EventEmailTemplateRepository
     */
     public static function repository(){
        return \Entity\Repository\EventEmailTemplateRepository::instance();
    }

    /**
     * @return \Entity\EventEmailTemplate
     */
     public static function create(){
        return new self();
    }

    /**
     * @var integer $id
     */
    protected $id;

    /**
     * @var text $message
     */
    protected $message;

    /**
     * @var string $subject
     */
    protected $subject;

    /**
     * @var string $event_type_name
     */
    protected $event_type_name;

    /**
     * @var boolean $activated
     */
    protected $activated;

    /**
     * @var integer $language_id
     */
    protected $language_id;


    /**
     * Get id
     *
     * @return integer 
     */
    public function get_id()
    {
        return $this->id;
    }

    /**
     * Set message
     *
     * @param text $value
     * @return EventEmailTemplate
     */
    public function set_message($value)
    {
        $this->message = $value;
        return $this;
    }

    /**
     * Get message
     *
     * @return text 
     */
    public function get_message()
    {
        return $this->message;
    }

    /**
     * Set subject
     *
     * @param string $value
     * @return EventEmailTemplate
     */
    public function set_subject($value)
    {
        $this->subject = $value;
        return $this;
    }

    /**
     * Get subject
     *
     * @return string 
     */
    public function get_subject()
    {
        return $this->subject;
    }

    /**
     * Set event_type_name
     *
     * @param string $value
     * @return EventEmailTemplate
     */
    public function set_event_type_name($value)
    {
        $this->event_type_name = $value;
        return $this;
    }

    /**
     * Get event_type_name
     *
     * @return string 
     */
    public function get_event_type_name()
    {
        return $this->event_type_name;
    }

    /**
     * Set activated
     *
     * @param boolean $value
     * @return EventEmailTemplate
     */
    public function set_activated($value)
    {
        $this->activated = $value;
        return $this;
    }

    /**
     * Get activated
     *
     * @return boolean 
     */
    public function get_activated()
    {
        return $this->activated;
    }

    /**
     * Set language_id
     *
     * @param integer $value
     * @return EventEmailTemplate
     */
    public function set_language_id($value)
    {
        $this->language_id = $value;
        return $this;
    }

    /**
     * Get language_id
     *
     * @return integer 
     */
    public function get_language_id()
    {
        return $this->language_id;
    }
}
<?php

namespace Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 *
 * @license see /license.txt
 * @author autogenerated
 */
class ForumThread extends \CourseEntity
{
    /**
     * @return \Entity\Repository\ForumThreadRepository
     */
     public static function repository(){
        return \Entity\Repository\ForumThreadRepository::instance();
    }

    /**
     * @return \Entity\ForumThread
     */
     public static function create(){
        return new self();
    }

    /**
     * @var integer $c_id
     */
    protected $c_id;

    /**
     * @var integer $thread_id
     */
    protected $thread_id;

    /**
     * @var string $thread_title
     */
    protected $thread_title;

    /**
     * @var integer $forum_id
     */
    protected $forum_id;

    /**
     * @var integer $thread_replies
     */
    protected $thread_replies;

    /**
     * @var integer $thread_poster_id
     */
    protected $thread_poster_id;

    /**
     * @var string $thread_poster_name
     */
    protected $thread_poster_name;

    /**
     * @var integer $thread_views
     */
    protected $thread_views;

    /**
     * @var integer $thread_last_post
     */
    protected $thread_last_post;

    /**
     * @var datetime $thread_date
     */
    protected $thread_date;

    /**
     * @var boolean $thread_sticky
     */
    protected $thread_sticky;

    /**
     * @var integer $locked
     */
    protected $locked;

    /**
     * @var integer $session_id
     */
    protected $session_id;

    /**
     * @var string $thread_title_qualify
     */
    protected $thread_title_qualify;

    /**
     * @var float $thread_qualify_max
     */
    protected $thread_qualify_max;

    /**
     * @var datetime $thread_close_date
     */
    protected $thread_close_date;

    /**
     * @var float $thread_weight
     */
    protected $thread_weight;


    /**
     * Set c_id
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_c_id($value)
    {
        $this->c_id = $value;
        return $this;
    }

    /**
     * Get c_id
     *
     * @return integer 
     */
    public function get_c_id()
    {
        return $this->c_id;
    }

    /**
     * Set thread_id
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_thread_id($value)
    {
        $this->thread_id = $value;
        return $this;
    }

    /**
     * Get thread_id
     *
     * @return integer 
     */
    public function get_thread_id()
    {
        return $this->thread_id;
    }

    /**
     * Set thread_title
     *
     * @param string $value
     * @return ForumThread
     */
    public function set_thread_title($value)
    {
        $this->thread_title = $value;
        return $this;
    }

    /**
     * Get thread_title
     *
     * @return string 
     */
    public function get_thread_title()
    {
        return $this->thread_title;
    }

    /**
     * Set forum_id
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_forum_id($value)
    {
        $this->forum_id = $value;
        return $this;
    }

    /**
     * Get forum_id
     *
     * @return integer 
     */
    public function get_forum_id()
    {
        return $this->forum_id;
    }

    /**
     * Set thread_replies
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_thread_replies($value)
    {
        $this->thread_replies = $value;
        return $this;
    }

    /**
     * Get thread_replies
     *
     * @return integer 
     */
    public function get_thread_replies()
    {
        return $this->thread_replies;
    }

    /**
     * Set thread_poster_id
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_thread_poster_id($value)
    {
        $this->thread_poster_id = $value;
        return $this;
    }

    /**
     * Get thread_poster_id
     *
     * @return integer 
     */
    public function get_thread_poster_id()
    {
        return $this->thread_poster_id;
    }

    /**
     * Set thread_poster_name
     *
     * @param string $value
     * @return ForumThread
     */
    public function set_thread_poster_name($value)
    {
        $this->thread_poster_name = $value;
        return $this;
    }

    /**
     * Get thread_poster_name
     *
     * @return string 
     */
    public function get_thread_poster_name()
    {
        return $this->thread_poster_name;
    }

    /**
     * Set thread_views
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_thread_views($value)
    {
        $this->thread_views = $value;
        return $this;
    }

    /**
     * Get thread_views
     *
     * @return integer 
     */
    public function get_thread_views()
    {
        return $this->thread_views;
    }

    /**
     * Set thread_last_post
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_thread_last_post($value)
    {
        $this->thread_last_post = $value;
        return $this;
    }

    /**
     * Get thread_last_post
     *
     * @return integer 
     */
    public function get_thread_last_post()
    {
        return $this->thread_last_post;
    }

    /**
     * Set thread_date
     *
     * @param datetime $value
     * @return ForumThread
     */
    public function set_thread_date($value)
    {
        $this->thread_date = $value;
        return $this;
    }

    /**
     * Get thread_date
     *
     * @return datetime 
     */
    public function get_thread_date()
    {
        return $this->thread_date;
    }

    /**
     * Set thread_sticky
     *
     * @param boolean $value
     * @return ForumThread
     */
    public function set_thread_sticky($value)
    {
        $this->thread_sticky = $value;
        return $this;
    }

    /**
     * Get thread_sticky
     *
     * @return boolean 
     */
    public function get_thread_sticky()
    {
        return $this->thread_sticky;
    }

    /**
     * Set locked
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_locked($value)
    {
        $this->locked = $value;
        return $this;
    }

    /**
     * Get locked
     *
     * @return integer 
     */
    public function get_locked()
    {
        return $this->locked;
    }

    /**
     * Set session_id
     *
     * @param integer $value
     * @return ForumThread
     */
    public function set_session_id($value)
    {
        $this->session_id = $value;
        return $this;
    }

    /**
     * Get session_id
     *
     * @return integer 
     */
    public function get_session_id()
    {
        return $this->session_id;
    }

    /**
     * Set thread_title_qualify
     *
     * @param string $value
     * @return ForumThread
     */
    public function set_thread_title_qualify($value)
    {
        $this->thread_title_qualify = $value;
        return $this;
    }

    /**
     * Get thread_title_qualify
     *
     * @return string 
     */
    public function get_thread_title_qualify()
    {
        return $this->thread_title_qualify;
    }

    /**
     * Set thread_qualify_max
     *
     * @param float $value
     * @return ForumThread
     */
    public function set_thread_qualify_max($value)
    {
        $this->thread_qualify_max = $value;
        return $this;
    }

    /**
     * Get thread_qualify_max
     *
     * @return float 
     */
    public function get_thread_qualify_max()
    {
        return $this->thread_qualify_max;
    }

    /**
     * Set thread_close_date
     *
     * @param datetime $value
     * @return ForumThread
     */
    public function set_thread_close_date($value)
    {
        $this->thread_close_date = $value;
        return $this;
    }

    /**
     * Get thread_close_date
     *
     * @return datetime 
     */
    public function get_thread_close_date()
    {
        return $this->thread_close_date;
    }

    /**
     * Set thread_weight
     *
     * @param float $value
     * @return ForumThread
     */
    public function set_thread_weight($value)
    {
        $this->thread_weight = $value;
        return $this;
    }

    /**
     * Get thread_weight
     *
     * @return float 
     */
    public function get_thread_weight()
    {
        return $this->thread_weight;
    }
}